<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on</title><link>https://glimboi.com/docs/</link><description>Recent content in Docs on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://glimboi.com/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>User Controls</title><link>https://glimboi.com/docs/users/users/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://glimboi.com/docs/users/users/</guid><description>Users GlimBoi must add a viewer as a user to store data on them. You can do this manually or let the bot automatically detect new users every 15 minutes. Users can be added and removed at any time.
Adding Users You can add users from the users page. You can also add them by typing the following in chat (permissions dependent) -
!user new NAME !user add NAME Removing Users You can remove users from the users page.</description></item><item><title>Basics</title><link>https://glimboi.com/docs/commands/commands/</link><pubDate>Wed, 13 Oct 2021 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/commands/commands/</guid><description>Basic Info Commands work the same as any other chatbot. A viewer types !commandName in chat and a script is ran. This script is divided into &amp;ldquo;actions&amp;rdquo;. Actions are instructions for the command. Commands are created on the commands page or from chat using the syntax -
!command add !NAME RESPONSE !command new !NAME RESPONSE !cmd add !NAME RESPONSE !cmd new !NAME RESPONSE !cmd remove !NAME !cmd del !NAME Adding commands from chat adds the ChatMessage action.</description></item><item><title>Overlay Setup</title><link>https://glimboi.com/docs/media/overlay/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/media/overlay/</guid><description>Clip by Edallical
Overlay Overview The Glimboi overlay will react to certain events in the bot. It can play sound effects, display img/GIFs, and play videos. You need to add the overlay as a browser source in OBS. Once added the media will show up on your stream. The overlay file is located in the modal prompt &amp;ldquo;Launch Overlay&amp;rdquo; on the media page.
Adding the Overlay Head to the media page.</description></item><item><title>Adding Media</title><link>https://glimboi.com/docs/media/media/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/media/media/</guid><description>Adding Media Before you can add sound effects and displayable media you need to add the media to the database. Go to the media page and add a few items. Glimboi does not copy any of the files. It stores the filepath of them and sends that to the overlay. The media files are then displayed in OBS. This means that if you move a media file you need to update its new location in Glimboi.</description></item><item><title>Events</title><link>https://glimboi.com/docs/miscellaneous/events/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/miscellaneous/events/</guid><description>Events Overview Glimboi can start various events. Events can be joined by viewers in chat. Multiple events can run at the same time. All events have settings on the event page to modify for your stream. Enjoy!
Raffle Glimboi can start a raffle. The bot will pick one winner. A raffle can be started on the events page or by typing !raffle in chat. Viewers can enter the raffle with !</description></item><item><title>Currency System</title><link>https://glimboi.com/docs/users/points/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/users/points/</guid><description>Currency Overview Viewers can become users in GlimBoi. Once they are added as a user they can start to earn currency. Every 15 minutes the bot will check if the user has spoken in chat. If the user has been active Glimboi will give the user a set amount of points. These points can be used for features within the bot.
Chat Commands (Info):
!points : Returns how many points the user has.</description></item><item><title>Going Live Notifications</title><link>https://glimboi.com/docs/integrations/goinglive/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/integrations/goinglive/</guid><description>Going-Live Announcements Glimboi can notify your Discord, Guilded, and Twitter servers when you go live. You must have the permissions to create a webhook in the server. You can notify both a Discord and Guilded server at the same time however only one of each type is supported.
Discord Go to the server where you want to add a webhook. Select a channel to create a webhook for. Create a new webhook with the desired bot name and image.</description></item><item><title>Ranks &amp; Roles</title><link>https://glimboi.com/docs/users/ranks/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/users/ranks/</guid><description>Ranks Overview A rank is a way to group users. You can use the default ranks or create custom ones. Below lists the default ranks. Capitalization does matter.
Streamer: The top rank by default. Mod: Second rank by default. user: Default rank automatically assigned to all new users. Note that the Glimesh API doesn&amp;rsquo;t support roles. You have to manually add the Streamer and Mod ranks in Glimboi.</description></item><item><title>Actions</title><link>https://glimboi.com/docs/commands/actions/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/commands/actions/</guid><description>Actions Actions are the instructions that your command follows. You can create a script of instructions for your command to run.
ChatMessage The most common action. Sends a message to chat. Each message has a max limit of 255 characters. Variables are supported.
API Request *Advanced Sends a request to a third party API. You can make a HTTP GET request with header values. You then store the response in variables.</description></item><item><title>OBS Websocket</title><link>https://glimboi.com/docs/integrations/obswebsocket/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://glimboi.com/docs/integrations/obswebsocket/</guid><description>OBS Websocket Glimboi can use OBS Websocket to talk to OBS with your commands. This requires OBS websocket to be installed. Simply download the executable file and run it.
Make sure you do not exceed version 5.0. It is untested with Glimboi.
Setup Once installed you need to connect Glimboi to OBS. This is done on the integrations page. Make sure OBS Websocket is enabled. If you set a password you should add it to the bottom input.</description></item></channel></rss>